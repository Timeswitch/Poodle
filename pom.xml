<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.hsos.kbse</groupId>
	<artifactId>poodle</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>poodle</name>

	<properties>
		<vaadin.version>7.6.6</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
		<jetty.plugin.version>9.2.3.v20140905</jetty.plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>vaadin-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<scope>provided</scope>
		</dependency>
		<!--
		  Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).
		  
		  For widgetset compilation, vaadin-client-compiler is automatically added on the
		  compilation classpath by vaadin-maven-plugin so normally there is no need for an
		  explicit dependency.
		-->
		<!--
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiler</artifactId>
			<scope>provided</scope>
		</dependency>
		-->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-cdi</artifactId>
			<version>1.0.3</version>
		</dependency>
		<dependency>
			<groupId>eu.maxschuster</groupId>
			<artifactId>vaadin-autocompletetextfield</artifactId>
			<version>1.0-alpha-4</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.1.0.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.0.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>5.1.0.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.1.0.Final</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- Exclude some unnecessary files generated by the GWT compiler. -->
					<packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
						WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
					<draftCompile>false</draftCompile>
					<compileReport>false</compileReport>
					<style>OBF</style>
					<strict>true</strict>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
							<!-- Comment out compile-theme goal to use on-the-fly theme compilation -->
							<goal>compile-theme</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<!-- Clean up also any pre-compiled themes -->
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/themes</directory>
							<includes>
								<include>**/styles.css</include>
								<include>**/styles.scss.cache</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- The Jetty plugin allows us to easily test the development build by
				running jetty:run on the command line. -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.plugin.version}</version>
				<configuration>
				    <scanIntervalSeconds>2</scanIntervalSeconds>
					<contextXml>src/main/webapp/WEB-INF/jetty-context.xml</contextXml>
					<webApp>
						<overrideDescriptor>src/main/webapp/WEB-INF/web-add.xml</overrideDescriptor>
					</webApp>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<profiles>
		<profile>
			<!-- Vaadin pre-release repositories -->
			<id>vaadin-prerelease</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			
			<repositories>
				<repository>
					<id>vaadin-prereleases</id>
					<url>http://maven.vaadin.com/vaadin-prereleases</url>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>vaadin-prereleases</id>
					<url>http://maven.vaadin.com/vaadin-prereleases</url>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			<id>poodle-remote</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.derby</groupId>
					<artifactId>derby</artifactId>
					<version>10.11.1.1</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>1.1.0.Alpha9</version>
						<configuration>
							<hostname>${wildfly-hostname}</hostname>
							<port>${wildfly-port}</port>
							<username>${wildfly-username}</username>
							<password>${wildfly-password}</password>
						</configuration>
						<executions>
							<execution>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>poodle-embedded</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.derby</groupId>
					<artifactId>derby</artifactId>
					<version>10.11.1.1</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>1.1.0.Alpha9</version>
						<configuration>
							<server-config>standalone-full.xml</server-config>
							<add-user>user:user</add-user>
							<execute-commands>
								<commands>
									<command>/subsystem=security/security-domain=poodleD:add(cache-type=default)</command>
									<command>/subsystem=security/security-domain=poodleD/authentication=classic:add(login-modules=[{"code"=>"Database","flag"=>"required","module-options"=>[("dsJndiName"=>"java:java:/Poodle/DB"),("principalsQuery"=>"SELECT PASSWORD FROM POODLE_USER WHERE EMAIL=?"),("rolesQuery"=>"select role, 'Roles' FROM POODLE_USER WHERE EMAIL=?"),("hashAlgorithm"=>"SHA-256"),("hashEncoding"=>"hex"),("hashCharset"=>"UTF-8")]}])</command>
									<command>:reload</command>
								</commands>
							</execute-commands>
						</configuration>
						<executions>
							<!-- Undeploy the application on clean -->
							<execution>
								<id>undeploy</id>
								<phase>clean</phase>
								<goals>
									<goal>undeploy</goal>
								</goals>
								<configuration>
									<ignoreMissingDeployment>true</ignoreMissingDeployment>
								</configuration>
							</execution>
							<!-- Deploy the JDBC library -->
							<execution>
								<id>deploy-driver</id>
								<phase>install</phase>
								<configuration>
									<groupId>org.apache.derby</groupId>
									<artifactId>derby</artifactId>
									<name>derby.jar</name>
								</configuration>
								<goals>
									<goal>deploy-artifact</goal>
								</goals>
							</execution>

							<!-- Add a data source -->
							<execution>
								<id>add-datasource</id>
								<phase>install</phase>
								<configuration>
									<address>subsystem=datasources,data-source=java:/Poodle/DB</address>
									<resources>
										<resource>
											<!--<enableResource>true</enableResource>-->
											<properties>
												<connection-url>${derby.jdbc.url}</connection-url>
												<jndi-name>java:/Poodle/DB</jndi-name>
												<enabled>true</enabled>
												<enable>true</enable>
												<user-name>${derby.jdbc.user}</user-name>
												<password>${derby.jdbc.password}</password>
												<driver-name>derby.jar</driver-name>
												<use-ccm>false</use-ccm>
											</properties>
										</resource>
									</resources>
								</configuration>
								<goals>
									<goal>add-resource</goal>
								</goals>
							</execution>
							<!-- Deploy the application on install -->
							<execution>
								<id>deploy</id>
								<phase>install</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
